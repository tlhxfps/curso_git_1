-- Comandos GIT --

1- git init // Cria a pasta .git oculta, ou seja, iniciar um projeto.

// Comentario //
// A branch master no git hub se chama main, houve apenas alteração na nomeclatura. //

2- Criar um repositório no git hub e seguir os passos abaixo.

- echo "# curso_git_1" >> README.md // Criar uma pasta README.md , porém pode ser qualquer outro arquivo, txt, html etc...
- git init // Criar a pasta .git oculta.
- git add README.md // Adicionando o primeiro arquivo, nesse caso está utilizando o README.md
- git commit -m "first commit" // Primeiro Commit
- git branch -M main // Criando a branch principal, nesse caso era master, porém agora é  main.
- git remote add origin https://github.com/tlhxfps/curso_git_1.git // Local do remote correto.
- git push -u origin main // Push na branch main/master.

-- Outros comandos --
- git remote -v // Mostra os remotes desse init.
- git remote rm origin // remove o remote origin que existe.
- git status // Verificar o status dos arquivos, commit, push etc...
- git config --global user.email "you@example.com" // Ao executar o primeiro commit, aparece essas configurações, com isso é  necessario adicionar um e-mail.
- git config --global user.name "Your Name" // mesma coisa do caso acima, porém nesse caso é necessario adicionar um nome.

- git status // Monitora arquivos não monitorados, arquivos modificados, arquivos excluidos e criado.
- git add exemplo.txt // adicionando arquivo exemplo.txt para o repositório criado.
- git add . // adicionando todos os arquivos da pasta para o repositório.
- git commit exemplo.txt -m "Enviando arquivo exemplo.txt" // Fazendo o commit do arquivo exemplo.txt
- git commit -a -m "Enviando todos os commits" // Fazendo o commit de todos os arquivos que foram adicionados.
- git push // Enviar os commites enviados.
- git pull // busca atualizações/inclusões e inclui na sua máquina.
- git clone https://github.com/tlhxfps/curso_git_1.git . // comando que realiza o clone do projeto, o ponto no final apenas para criar na pasta informada.
- git rm // remove arquivo desnecessário, em seguida é necessário enviar um git commit e git push.
- git log // verificar os commits enviados.
- git mv // Renomear e alterar o local de arquivos. exemplo: git mv rodape.css css/rodape.css ou git mv roda_pe.css rodape.css
- git checkout arquivo.css // Resenta as modificações desse arquivo, com isso ele deixa o arquivo conforme está o git.  

-- Não comandos --

- .gitignore // criar um arquivo chamado .gitignore e dentro dele incluir os arquivos ou pasta que não serão enviados para o github. exemplos:
Arquivo: .gitignore 
Dentro do arquivo: 
d.txt
pastateste/* --> ignora todos os arquivos dentro dessa pasta.